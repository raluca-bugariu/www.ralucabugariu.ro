{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/comp1/comp1.component.ts","./src/app/comp2/comp2-details/comp2-details.component.ts","./src/app/comp2/comp2.component.ts","./src/app/comp3/comp3-details/comp3-details.component.ts","./src/app/comp3/comp3.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `\n  \n  Main component\n\n  <!-- with this approach the app will be reloaded from sever ... we don't want this as the state can be lost -->\n  <br/>Reload app each time from server\n  <br/><a href=\"/\">comp1</a>\n  <br/><a href=\"/comp2\">comp2</a>\n  <br/><a href=\"/comp3\">comp3</a>\n\n  <!-- the right way to use routes without calling the server -->\n  <br/><br/><br/>Local calls\n  <br/><a routerLink=\"/\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">comp1</a>\n  <br/><a routerLink=\"/comp2\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">comp2</a>\n  <br/><a routerLink=\"/comp3\"  routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">comp3</a>\n\n  <hr>\n\n  <router-outlet></router-outlet>\n  `\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { Comp1Component } from './comp1/comp1.component';\nimport { Comp2Component } from './comp2/comp2.component';\nimport { Comp3Component } from './comp3/comp3.component';\nimport { Comp2DetailsComponent } from './comp2/comp2-details/comp2-details.component';\nimport { Comp3DetailsComponent } from './comp3/comp3-details/comp3-details.component';\n\n\nconst appRoutes: Routes = [\n  {path: '', component: Comp1Component},\n  {path: 'comp2', component: Comp2Component},\n  {path: 'comp2/:id', component: Comp2DetailsComponent},\n  {path: 'comp3', component: Comp3Component},\n  {path: 'comp3/:id', component: Comp3DetailsComponent}\n  ];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    Comp1Component,\n    Comp2Component,\n    Comp3Component,\n    Comp2DetailsComponent,\n    Comp3DetailsComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(appRoutes)\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-comp1',\n  template: `\n  \n  <p>\n    comp1 works!\n  </p>\n\n  `\n})\nexport class Comp1Component  {\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Params} from '@angular/router';\n\n@Component({\n  selector: 'app-comp2-details',\n  template: `\n  \n  <p>\n    comp2-details loaded with id: {{id}}\n\n    <!-- special situation: reload the page with a different id\n    this will normally not work just with this.activeRoute.snapshot.params['id']\n    we'll need an additional observer\n    -->\n    <br/><a routerLink=\"/comp2/5\">Get details for item 5</a>\n  </p>\n  \n  `\n})\nexport class Comp2DetailsComponent implements OnInit {\n\n  id: number;\n\n  constructor(private activeRoute: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.id = this.activeRoute.snapshot.params['id']; // id match the :id part from app.module.ts link config\n    this.activeRoute.params.subscribe(\n      (params: Params) => {\n        this.id = params['id'];\n      });\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-comp2',\n  template: `\n  \n  <p>\n    comp2 works!\n    <button (click)=\"navigate(3)\">Navigate to Comp3</button>\n    <button (click)=\"navigateRelative(3)\">Navigate to Comp3 (relative)</button>\n\n    <br/>\n\n    <br/><a routerLink=\"/comp2/1\">Get details for item 1</a>\n    <br/><a routerLink=\"/comp2/2\">Get details for item 2</a>\n    <br/><a routerLink=\"/comp2/3\">Get details for item 3</a>\n  </p>\n  \n  `\n})\nexport class Comp2Component implements OnInit {\n\n  constructor(private router : Router, private activeRoute: ActivatedRoute) { }\n\n  ngOnInit() {\n  }\n\n  navigate (id: number) {\n    this.router.navigate(['/comp' + id]);\n  }\n\n  navigateRelative (id: number) {\n    this.router.navigate(['../comp' + id], {relativeTo: this.activeRoute});\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'app-comp3-details',\n  template:`\n  \n  <p>\n    comp3-details works!\n  </p>\n  `\n})\nexport class Comp3DetailsComponent implements OnInit {\n\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    console.log(this.route.snapshot.queryParams);\n    console.log(this.route.snapshot.fragment);\n\n    // use observers when reloading page from inside the same page, but with different parameters (query and fragments)\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-comp3',\n  template: `\n  \n  <p>\n    comp3 works!\n\n    <br/>\n    <a\n      [routerLink]=\"['/comp3', '7']\"\n      [queryParams]=\"{mode: 'abc'}\"\n      fragment = 'section3'>\n      Get details for item 7 with query params and fragment</a>\n\n  </p>\n\n  \n  `\n})\nexport class Comp3Component implements OnInit {\n\n  constructor(private router : Router) { }\n\n  ngOnInit() {\n  }\n\n  navigate (id: number) {\n    this.router.navigate(['/comp3/' + id]);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}